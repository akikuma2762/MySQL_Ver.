[Parameter]
UntradedCustomer_Time=and to_char(最後交易日) >={0} and to_char(最後交易日)<= {1}
Item= and  apld.cod_item='{0}'
Item_name= and  item.nam_items like '%{0}%'
[Get_Item]
InactiveInventory_House=select DISTINCT test2.loct.NAM_LOC  as 儲位  from test2.loct where  test2.loct.NAM_LOC IS not null order by test2.loct.NAM_LOC 
InactiveInventory_Class=select test2.codd.code as CLASS , test2.codd.content as C_NAME   from test2.codd where code_id = 'TYPITM' order by C_NAME
Scrapped_Man=select DISTINCT  test2.USID.USER_NM as 報廢者  from test2.MLOSM  left join test2.MLOSD on test2.MLOSM.Num_LOS = test2.MLOSD.Num_LOS  left join test2.item on test2.item.coD_item = test2.MLOSD.coD_item  left join test2.codd on test2.CODD.code = test2.MLOSD.RST_LOS and test2.CODD.code_id = 'STSLOS'  left join test2.usid on TO_CHAR(test2.MLOSM.EMP_KEYIN) = TO_CHAR(test2.USID.USER_ID)  where test2.MLOSM.DAT_KEYIN>={0} and test2.MLOSM.DAT_KEYIN<={1} 
Order_Item=select DISTINCT test2.codd.code as value,test2.codd.content as text from test2.codd where code_id = 'STSLIN' and test2.codd.code is not null and test2.codd.code <> '90'
Nam_Item=SELECT distinct test2.item.NAM_ITEM   FROM test2.item WHERE test2.ITEM.cls_item = '1' OR test2.ITEM.cls_item = '8' 

[dekERPVIS]
Orders_Line=SELECT a.機種 as 機種, a.產線代號 as 產線代號, sum(a.匯率 * a.金額) 金額, sum( a.數量) 數量 FROM   (SELECT test2.item.nam_item         AS 機種, test2.item.nam_item         AS 產線代號, test2.pohd.cod_dola         AS 幣別, Nvl(test2.rmrt.val_rate, 1) AS 匯率, Sum(test2.poln.mny_amt)     AS 金額, Sum(test2.poln.qty_req)     AS 數量 FROM   test2.poln LEFT JOIN test2.item ON test2.item.cod_item = test2.poln.cod_item AND test2.item.cls_item = '1' LEFT JOIN test2.pops ON test2.pops.num_po = test2.poln.num_po LEFT JOIN test2.pohd ON test2.pops.num_po = test2.pohd.num_po LEFT JOIN test2.clds ON test2.clds.num_ps = test2.pops.num_ps LEFT JOIN test2.codd ON test2.codd.code = test2.poln.sts_line LEFT JOIN test2.rmrt ON test2.rmrt.typ_rm = test2.pohd.cod_dola WHERE {0}{1}{2}  AND test2.codd.code <> '80' AND test2.codd.code <> '90' AND test2.codd.code_id = 'STSLIN' AND test2.pops.num_po IS NOT NULL GROUP  BY test2.item.nam_item, test2.pohd.cod_dola, test2.rmrt.val_rate) a where a.機種<>'未設定機種' group by a.機種,a.產線代號  
Orders_Custom=SELECT a.客戶簡稱 as 客戶簡稱,sum(a.匯率 * a.金額) 金額,sum( a.數量) 數量 from(SELECT * FROM   ( SELECT    test2.poln.cod_cust     AS 客戶簡稱, mf2000.pohd.cod_dola         AS 幣別, Nvl(mf2000.rmrt.val_rate, 1) AS 匯率, Sum(test2.poln.mny_amt) AS 金額, Sum(test2.poln.qty_req) AS 數量 FROM      test2.poln LEFT JOIN test2.item ON        test2.item.cod_item = test2.poln.cod_item LEFT JOIN test2.pops ON        test2.pops.num_po = test2.poln.num_po LEFT JOIN test2.pohd ON        test2.pops.num_po = test2.pohd.num_po LEFT JOIN test2.clds ON        test2.clds.num_ps = test2.pops.num_ps LEFT JOIN test2.codd ON        test2.codd.code = test2.poln.sts_line AND       test2.codd.code_id = 'STSLIN' LEFT JOIN mf2000.rmrt ON mf2000.rmrt.typ_rm = mf2000.pohd.cod_dola WHERE    {0}{1}{2} AND       test2.codd.code <> '90' AND       test2.codd.code <> '80' AND       test2.item.cls_item = 1 GROUP BY  test2.poln.cod_cust,  mf2000.pohd.cod_dola,mf2000.rmrt.val_rate ORDER BY  {3} DESC){4}) a group by a.客戶簡稱 ORDER BY  {3} DESC
Orders_Table= SELECT test2.item.NAM_ITEM AS 產線代號,test2.poln.COD_CUST AS 客戶簡稱,sum(test2.poln.MNY_AMT) AS 金額,sum(test2.poln.QTY_REQ) AS 數量 FROM test2.POLN LEFT JOIN test2.item ON test2.item.COD_ITEM = test2.poln.COD_ITEM LEFT JOIN test2.POPS ON test2.pops.NUM_PO = test2.poln.NUM_PO LEFT JOIN test2.pohd ON test2.pops.NUM_PO = test2.pohd.NUM_PO LEFT JOIN test2.CLDS ON test2.clds.NUM_PS = test2.pops.NUM_PS LEFT JOIN test2.CODD ON test2.CODD.CODE = test2.poln.STS_LINE AND test2.CODD.CODE_ID = 'STSLIN' WHERE {0} {1} {2} AND test2.codd.code <> '90' AND test2.codd.code <> '80' AND test2.item.cls_item = 1 GROUP BY test2.item.NAM_ITEM, test2.poln.COD_CUST
Orders_Details=SELECT test2.poln.COD_CUST AS 客戶簡稱,test2.poln.COD_ITEMO AS 客戶品號,test2.item.nam_item AS 產線代號,test2.pops.NUM_PS AS 製令號,test2.item.NAM_ITEM AS 機種,test2.CODD.CONTENT AS 訂單狀態,test2.pohd.dat_po 訂單日期,test2.poln.DAT_DELS 預交日期,test2.clds.DAT_BEGS AS 預計開工日,'' AS 成品庫存日,test2.poln.QTY_REQ AS 數量 FROM test2.POLN LEFT JOIN test2.item ON test2.item.COD_ITEM = test2.poln.COD_ITEM LEFT JOIN test2.POPS ON test2.pops.NUM_PO = test2.poln.NUM_PO LEFT JOIN test2.pohd ON test2.pops.NUM_PO = test2.pohd.NUM_PO LEFT JOIN test2.CLDS ON test2.clds.NUM_PS = test2.pops.NUM_PS LEFT JOIN test2.CODD ON test2.CODD.CODE = test2.poln.STS_LINE  AND test2.CODD.CODE_ID = 'STSLIN' WHERE {0} {1} AND test2.codd.code <> '90' AND test2.codd.code <> '80' AND test2.poln.COD_CUST = '{2}' AND test2.item.cls_item = 1 {3}
Recordsofchangetheorder= select * from( SELECT COD_CUST AS 客戶名稱,count(COD_CUST) AS 交易次數 ,sum(SER_PO) AS 變更次數 FROM test2.POHD WHERE DAT_DELS>=  {0}   AND DAT_DELS<= {1}   AND SER_PO>0 GROUP BY COD_CUST ORDER BY sum(SER_PO) DESC ) {2} 
Shipment_Image= select  test2.item.NAM_ITEM as 產線代號,sum(test2.deld.qty_del) as 數量,sum(test2.deld.AMT_DEL) as 金額 from test2.DELH left join test2.DELD on test2.delh.NUM_DEL = test2.deld.NUM_DEL and test2.delh.NUM_CUST = test2.deld.NUM_CUST left join test2.item on test2.item.COD_ITEM = test2.deld.COD_ITEM left join test2.POPS on test2.pops.COD_ITEM = test2.deld.COD_ITEM and test2.pops.NUM_PO = test2.deld.NUM_PO where test2.deld.qty_del is NOT NULL and test2.delh.DAT_DEL>='{0}' and test2.delh.DAT_DEL<='{1}' and STS_DEL <> '90' and test2.item.cls_item = 1 group by test2.item.NAM_ITEM  order by sum(test2.deld.qty_del) desc 
Shipment_Table=SELECT test2.item.NAM_ITEM AS 產線代號 , test2.delh.NUM_CUST AS 客戶簡稱 ,NVL( (select content  from test2.codd where test2.codd.code_id='NUMWAY' and delh.num_way  =test2.codd.code ),'未填寫' ) 國家別,item.cod_modl 機型,sum(test2.deld.qty_del) AS 數量,sum(test2.deld.AMT_DEL) AS 金額 FROM test2.DELH LEFT JOIN test2.DELD ON test2.delh.NUM_DEL = test2.deld.NUM_DEL AND test2.delh.NUM_CUST = test2.deld.NUM_CUST LEFT JOIN test2.item ON test2.item.COD_ITEM = test2.deld.COD_ITEM LEFT JOIN test2.POPS ON test2.pops.COD_ITEM = test2.deld.COD_ITEM AND test2.pops.NUM_PO = test2.deld.NUM_PO WHERE test2.deld.qty_del IS NOT NULL AND test2.delh.DAT_DEL >= '{0}' AND STS_DEL <> '90' AND test2.delh.DAT_DEL <= '{1}' AND test2.item.cls_item = 1 GROUP BY test2.delh.NUM_CUST,item.cod_modl,delh.num_way, test2.item.NAM_ITEM ORDER BY sum(test2.deld.qty_del) DESC
Shipment_Details= SELECT test2.delh.NUM_CUST AS 客戶簡稱, test2.item.NAM_ITEM AS 產線代號,NVL( (select content  from test2.codd where test2.codd.code_id='NUMWAY' and delh.num_way  =test2.codd.code ),'未填寫' ) 國家別,test2.delh.NUM_DEL AS 出貨單號,test2.deld.COD_ITEMO AS 客戶料號, to_char(to_date(test2.delh.DAT_DEL, 'yyyymmdd'), 'yyyy/MM/dd')   AS 出貨日期,test2.pops.NUM_PS AS 製令號,item.cod_modl 機型 ,test2.item.cod_item AS 品號,test2.item.nam_item AS 品名規格,sum(test2.deld.qty_del) AS 小計 FROM test2.DELH LEFT JOIN test2.DELD ON test2.delh.NUM_DEL = test2.deld.NUM_DEL AND test2.delh.NUM_CUST = test2.deld.NUM_CUST LEFT JOIN test2.item ON test2.item.COD_ITEM = test2.deld.COD_ITEM LEFT JOIN test2.POPS ON test2.pops.COD_ITEM = test2.deld.COD_ITEM AND test2.pops.NUM_PO = test2.deld.NUM_PO WHERE  test2.deld.qty_del IS NOT NULL AND test2.delh.DAT_DEL>='{0}' AND STS_DEL <> '90' AND test2.item.cls_item = 1 AND test2.delh.DAT_DEL<='{1}' {2} GROUP BY test2.delh.NUM_CUST, test2.item.NAM_ITEM , test2.item.cod_item, test2.item.nam_item,delh.num_way,item.cod_modl,test2.delh.NUM_DEL ,test2.deld.COD_ITEMO ,test2.delh.DAT_DEL ,test2.pops.NUM_PS  ORDER BY sum(test2.deld.qty_del)
UntradedCustomer= select *from (        select         test2.poln.COD_CUST as 客戶,        max(test2.poln.DAT_DELS) as 最後交易日 ,        ROUND(TO_NUMBER(to_date('{0}','YYYYMMDD') - to_date(max(test2.poln.DAT_DELS),'YYYYMMDD')))     as 未交易天數         from         test2.POLN GROUP BY test2.poln.COD_CUST) A where 未交易天數 {1} {2} {3} 
supplierscore= SELECT test2.FACT.NAM_FACTS AS 供應商,count(distinct test2.BUYD.NUM_BUY) AS 採購次數,sum(test2.BUYD.QTY_DEL) AS 期限內已交總數量,sum(test2.BUYD.QTY_BUY) AS 採購總數量,'' AS 達交率 FROM test2.BUYD LEFT JOIN test2.BUYM ON test2.BUYD.NUM_BUY = test2.BUYM.NUM_BUY AND test2.BUYD.DAT_REQ = test2.BUYM.DAT_REQ LEFT JOIN test2.fact ON test2.FACT.cod_fact = test2.BUYM.cod_FACT LEFT JOIN test2.RCVD ON test2.BUYM.NUM_BUY = test2.RCVD.NUM_BUY  AND test2.BUYM.cod_fact = test2.RCVD.cod_fact LEFT JOIN test2.RCVM ON test2.RCVM.num_rcv = test2.RCVD.num_rcv AND test2.RCVM.cod_fact = test2.RCVD.cod_fact WHERE to_char(test2.BUYD.DAT_REQ) >={0} AND to_char(test2.BUYD.DAT_REQ) <={1} and (test2.BUYD.STS_LINE<> '80' and    test2.BUYD.STS_LINE<> '42' and    test2.BUYD.STS_LINE<>'85')  GROUP BY test2.FACT.NAM_FACTS
supplierscore_Details=SELECT test2.BUYD.NUM_BUY AS 採購單號,test2.BUYD.LIN_BUY AS 採購明細序,test2.FACT.NAM_FACTS AS 供應商名稱,test2.BUYD.COD_ITEM AS 品號,test2.item.NAM_ITEM AS 品名規格,sum(test2.BUYD.QTY_BUY) AS 採購數量,sum(test2.BUYD.QTY_DEL) AS 期限內已交數量,test2.BUYM.DAT_BUY AS 採購單日期, test2.BUYD.DAT_REQ AS 預交日期,test2.buyd.dat_por 回覆交貨日期,max(test2.RCVM.DAT_ARR) AS 期限內最後進貨日期,round((sum(test2.BUYD.QTY_DEL) * 100 / sum(test2.BUYD.QTY_BUY)), 2) AS 達交率 FROM test2.BUYD LEFT JOIN test2.BUYM ON test2.BUYD.NUM_BUY = test2.BUYM.NUM_BUY AND test2.BUYD.DAT_REQ = test2.BUYM.DAT_REQ LEFT JOIN test2.fact ON test2.FACT.cod_fact = test2.BUYM.cod_FACT LEFT JOIN test2.item ON test2.item.cod_item = test2.BUYD.cod_item LEFT JOIN test2.RCVD ON test2.BUYM.NUM_BUY = test2.RCVD.NUM_BUY AND test2.BUYM.cod_fact = test2.RCVD.cod_fact LEFT JOIN test2.RCVM ON test2.RCVM.num_rcv = test2.RCVD.num_rcv AND test2.RCVM.cod_fact = test2.RCVD.cod_fact WHERE test2.BUYD.DAT_REQ >={0} AND test2.BUYD.DAT_REQ <={1} AND (test2.BUYD.STS_LINE<> '80' AND test2.BUYD.STS_LINE<> '42' AND test2.BUYD.STS_LINE<>'85') AND test2.FACT.NAM_FACTS {2} GROUP BY test2.BUYD.NUM_BUY, test2.BUYD.LIN_BUY, test2.FACT.NAM_FACTS, test2.BUYD.COD_ITEM, test2.item.NAM_ITEM, test2.BUYM.DAT_BUY, test2.BUYD.DAT_REQ, test2.BUYD.STS_LINE,test2.buyd.dat_por
materialrequirementplanning= SELECT test2.APLD.COD_ITEM AS 品號,test2.item.NAM_ITEM AS 品名規格,sum(test2.APLD.QTY_NEED) AS 領料數,test2.CODD.content AS 用途說明 FROM test2.apld LEFT JOIN test2.aply ON test2.APLD.Num_aply = test2.APLY.Num_aply LEFT JOIN test2.ITEM ON test2.item.cod_item = test2.APLD.cod_item LEFT JOIN test2.POPS ON test2.pops.COD_ITEM = test2.item.COD_ITEM AND test2.pops.cod_cust = test2.APLY.cod_cust LEFT JOIN test2.codd ON test2.CODD.code_id = 'CODAPLY'  AND test2.CODD.code = test2.APLY.cod_aply WHERE test2.APLY.DAT_APLY >= '{0}' AND test2.APLY.DAT_APLY <='{1}' {2} {3} AND (test2.apld.sts_APLY = '30' OR test2.apld.sts_APLY = '32' OR test2.apld.sts_APLY = '50' OR test2.apld.sts_APLY = '52') GROUP BY test2.APLD.COD_ITEM, test2.item.NAM_ITEM, test2.CODD.content
materialrequirementplanning_Details_Image= SELECT substr(領料月份,0, 6) AS 領料月份 ,領料品號 ,用途說明,sum(領料數) AS 領料數 FROM  (SELECT test2.APLY.DAT_APLY AS 領料月份, test2.APLD.COD_ITEM AS 領料品號, test2.CODD.content AS 用途說明, test2.APLD.QTY_NEED AS 領料數 FROM test2.apld LEFT JOIN test2.aply ON test2.APLD.Num_aply = test2.APLY.Num_aply LEFT JOIN test2.ITEM ON test2.item.cod_item = test2.APLD.cod_item LEFT JOIN test2.POPS ON test2.pops.COD_ITEM = test2.item.COD_ITEM AND test2.pops.cod_cust = test2.APLY.cod_cust LEFT JOIN test2.codd ON test2.CODD.code_id = 'CODAPLY' AND test2.CODD.code = test2.APLY.cod_aply where test2.apld.sts_APLY = '30' OR test2.apld.sts_APLY = '32' OR test2.apld.sts_APLY = '50' OR test2.apld.sts_APLY = '52') WHERE 領料品號= '{0}' AND 領料月份>={1} AND 領料月份<={2} GROUP BY substr(領料月份,0, 6),領料品號,用途說明 ORDER BY 領料品號
materialrequirementplanning_Details_Table= SELECT test2.APLY.NUM_APLY AS 領料單號 , test2.APLY.DAT_APLY AS 領料單日期,test2.APLD.COD_ITEM AS 領料單明細品號,test2.item.NAM_ITEM AS 領料單明細品名規格,test2.APLD.QTY_NEED AS 領料數量,test2.CODD.content AS 用途說明,test2.APLY.NUM_PS AS 製令單號 ,test2.item.NAM_ITEM AS 製令明細品名規格,test2.pops.COD_CUST AS 使用客戶  FROM test2.apld LEFT JOIN test2.aply ON test2.APLD.Num_aply = test2.APLY.Num_aply LEFT JOIN test2.ITEM ON test2.item.cod_item = test2.APLD.cod_item LEFT JOIN test2.POPS ON test2.pops.COD_ITEM = test2.item.COD_ITEM AND test2.pops.cod_cust = test2.APLY.cod_cust LEFT JOIN test2.codd ON test2.CODD.code_id = 'CODAPLY' AND test2.CODD.code = test2.APLY.cod_aply WHERE   test2.APLD.COD_ITEM = '{0}' AND test2.APLY.DAT_APLY>={1} AND test2.APLY.DAT_APLY<={2} AND (test2.apld.sts_APLY = '30' OR test2.apld.sts_APLY = '32' OR test2.apld.sts_APLY = '50' OR test2.apld.sts_APLY = '52')
stockanalysis= SELECT distinct test2.pops.COD_CUST AS 客戶簡稱,test2.item.NAM_ITEM AS 產線代號,test2.rtnm.NUM_PS AS 製令號,'' AS 入庫日 FROM test2.Rtnd LEFT JOIN test2.rtnm on test2.rtnm.num_rtnm = test2.Rtnd.Num_rtnm left join test2.POPS on test2.POPS.Num_PS = test2.rtnm.NUM_PS LEFT JOIN test2.item ON test2.item.COD_ITEM = test2.rtnd.cod_rtnd where rtnm.rsn_rtnm in('03','08') And rtnd.sts_rtnd <21 and test2.ITEM.cls_item = 1 and  QTY_RTND >0 union all Select test2.pops.COD_CUST AS 客戶簡稱, item.nam_item,lcst.ser_pcs,'' AS 入庫日 From test2.lcst Left Join  test2.item On  test2.lcst.cod_item =  test2.item.cod_item Left Join  test2.clds On  test2.lcst.ser_pcs =  test2.clds.num_ps left join  test2.POPS on  test2.POPS.Num_PS =  test2.lcst.ser_pcs Where ITEM.CLS_ITEM IN ('1','8') And lcst.qty_stk > 0
stockanalysis_details= SELECT * FROM  (SELECT DISTINCT test2.pops.COD_CUST AS 客戶簡稱,test2.item.NAM_ITEM AS 產線代號,test2.pops.NUM_PO AS 訂單號碼,test2.rtnm.NUM_PS AS 製令號,'' AS 入庫日,poln.ps 訂單規格 FROM test2.Rtnd LEFT JOIN test2.rtnm ON test2.rtnm.num_rtnm = test2.Rtnd.Num_rtnm LEFT JOIN test2.POPS ON test2.POPS.Num_PS = test2.rtnm.NUM_PS LEFT JOIN test2.item ON test2.item.COD_ITEM = test2.rtnd.cod_rtnd left join test2.POLN on test2.pops.NUM_PO = test2.poln.NUM_PO WHERE rtnm.rsn_rtnm in('03', '08') AND rtnd.sts_rtnd <21 AND test2.ITEM.cls_item = 1 AND QTY_RTND >0 UNION ALL SELECT test2.pops.COD_CUST AS 客戶簡稱, item.nam_item, test2.pops.NUM_PO AS 訂單號碼,lcst.ser_pcs, '' AS 入庫日,poln.ps 訂單規格 FROM test2.lcst LEFT JOIN test2.item ON test2.lcst.cod_item = test2.item.cod_item LEFT JOIN test2.clds ON test2.lcst.ser_pcs = test2.clds.num_ps LEFT JOIN test2.POPS ON test2.POPS.Num_PS = test2.lcst.ser_pcs left join test2.POLN on test2.pops.NUM_PO = test2.poln.NUM_PO WHERE ITEM.CLS_ITEM IN ('1', '8') AND lcst.qty_stk > 0) a where a.客戶簡稱 {0}
InactiveInventory= SELECT 最後領料日,品號,品名規格,倉位,類別,剩餘總庫存,領用數量,進貨數量,儲位,(剩餘總庫存 + 領用數量 - 進貨數量) AS 期初庫存 , 標準成本,(剩餘總庫存 * 標準成本) AS 金額小計 FROM (SELECT max(test2.ITTR.dat_trn) AS 最後領料日, test2.ITTR.cod_item AS 品號, test2.item.NAM_ITEM AS 品名規格, test2.loct.NAM_LOC AS 儲位, test2.codd.content AS 類別, NVL( (SELECT sum(A.QTY_TRN) FROM test2.ittr A WHERE A.dat_trn>{0} AND A.dat_trn<={1} AND A.TYP_IO = 'O' and A.cod_item = test2.ITTR.cod_item),'0') AS 領用數量, NVL( (SELECT sum(B.QTY_TRN) FROM test2.ittr B WHERE B.dat_trn>{0} AND B.dat_trn<={1} AND B.TYP_IO = 'I' and B.cod_item = test2.ITTR.cod_item),'0') AS 進貨數量, test2.item.QTY_TOTAL AS 剩餘總庫存, test2.item.CHR_GOODS AS 倉位, test2.item.CST_TOTAL AS 標準成本 FROM test2.ittr LEFT JOIN test2.item ON test2.ITTR.cod_item = test2.item.cod_item LEFT JOIN test2.codd ON test2.codd.code = test2.item.cls_item AND test2.codd.code_id ='CODCLS' LEFT JOIN test2.loct ON test2.loct.cod_LOC = test2.item.COD_LOC WHERE test2.item.QTY_TOTAL > 0 {2} {3} GROUP BY test2.ITTR.cod_item, test2.item.NAM_ITEM, test2.item.COD_LOC, test2.codd.content, test2.item.QTY_TOTAL, test2.item.CHR_GOODS, test2.item.CST_TOTAL, test2.loct.NAM_LOC)
Scrapped= SELECT  test2.USID.USER_NM AS 報廢者,test2.MLOSM.NUM_LOS AS 單據號碼,test2.MLOSM.DAT_KEYIN AS 單據日期,test2.MLOSD.COD_ITEM AS 品號,test2.item.NAM_ITEM AS 品名規格,test2.MLOSD.MNY_PRICS AS 標準成本,test2.MLOSD.QTY_LOS AS 報廢數量,test2.MLOSD.MNY_LOS AS 金額小計,'' AS 單位,test2.MLOSD.SER_PCS AS 覆驗單號, (select test2.codd.content from test2.codd where  test2.codd.code_id='RSTLOS' and test2.codd.code = test2.MLOSD.RST_LOS ) AS 報廢原因,  (select test2.codd.content from test2.codd where test2.codd.code_id='CODDPT' and test2.codd.code = test2.MLOSD.COD_DPT)   AS 責任歸屬,test2.MLOSD.REMARK AS 備註 FROM test2.MLOSM LEFT JOIN test2.MLOSD ON test2.MLOSM.Num_LOS = test2.MLOSD.Num_LOS LEFT JOIN test2.item ON test2.item.coD_item = test2.MLOSD.coD_item LEFT JOIN test2.codd ON test2.CODD.code = test2.MLOSD.RST_LOS AND test2.CODD.code_id = 'STSLOS' LEFT JOIN test2.usid ON TO_CHAR(test2.MLOSM.EMP_KEYIN) = TO_CHAR(test2.USID.USER_ID) WHERE test2.MLOSM.DAT_KEYIN>={0} AND test2.MLOSM.DAT_KEYIN<={1} {2} AND test2.MLOSD.sts_los <> '90' ORDER BY mf2000.MLOSD.MNY_LOS DESC
waitingfortheproduction= select test2.pops.COD_CUST as 客戶簡稱,test2.item.NAM_ITEM as 產線代號,test2.pops.NUM_PS as 排程編號,test2.pops.NUM_PO as 訂單號碼,test2.poln.NUM_CASE AS 客戶訂單,test2.clds.COD_ITEM as 品號,test2.POHD.DAT_PO as 訂單日期,test2.clds.DAT_BEGS as 預計開工日,test2.CLDS.DAT_ENDS as 預計完工日 from test2.pops left join test2.item on test2.pops.cod_item = test2.item.cod_item  left join test2.poln on test2.poln.NUM_PO = test2.pops.NUM_PO left join test2.CLDS on test2.clds.NUM_PS = test2.pops.NUM_PS and test2.pops.cod_item = test2.clds.cod_item left join test2.POHD on test2.pops.NUM_PO = test2.POHD.NUM_PO and test2.pops.cod_cust = test2.POHD.COD_CUST where {0} and test2.item.cls_item = 1 and test2.CLDS.STS_PCS <> 95 and test2.CLDS.STS_PCS <> 99 
GetShipment_details=select test2.delh.NUM_DEL as 出貨單號,test2.deld.COD_ITEMO as 客戶料號,test2.delh.DAT_DEL as 出貨日期,test2.pops.NUM_PS as 製令號,test2.deld.PS as 備註 from test2.DELH  left join test2.DELD on test2.delh.NUM_DEL = test2.deld.NUM_DEL and test2.delh.NUM_CUST = test2.deld.NUM_CUST left join test2.item on test2.item.COD_ITEM = test2.deld.COD_ITEM left join test2.POPS on test2.pops.COD_ITEM = test2.deld.COD_ITEM and test2.pops.NUM_PO = test2.deld.NUM_PO where test2.deld.qty_del is not null and test2.delh.DAT_DEL>='{0}' and test2.delh.DAT_DEL<='{1}' and test2.delh.NUM_CUST = '{2}' and STS_DEL <> '90' and test2.item.cod_item = '{3}' and test2.item.cls_item = 1 order by test2.delh.NUM_DEL 
Stock_Details= SELECT cod_item 料號, nam_items 品名, dsc_item 規格, QTY_STK 良品數, QTY_STKC 勘用品數量, QTY_STKB 待修品數量, QTY_STKO 其他總存量, QTY_TOTAL 總庫存量 FROM test2.item where nam_items like '%{0}%'
Picking_List= SELECT apld.num_aply 用料編號, apld.lin_aply 用料項次, apld.dat_need 需求日, aply.num_ps 製令號, apld.cod_item 料號, item.nam_items 品名, item.dsc_item 規格,  apld.qty_need 需求數, apld.qty_pand 下架數 , item.qty_stk 良品數 , codd.content 狀況 FROM test2.apld LEFT JOIN  test2.aply ON apld.num_aply=aply.num_aply LEFT JOIN  test2.item ON item.cod_item=apld.cod_item LEFT JOIN (SELECT content, code FROM  test2.codd WHERE code_id ='STSAPLY')codd ON codd.code=apld.sts_aply WHERE apld.sts_aply BETWEEN '00' AND '52'  and num_ps = '{0}' {1}
Account_Outstanding_Details= SELECT  armm.cod_cust 客戶代號, armm.cod_dola 幣別, armd.dat_del 出貨日期, armd.num_del 出貨單號, armm.val_rate 匯率, SUM(armd.mny_rcv) "已收金額(原幣)", SUM(armd.amt_totnt) "應收總額(含稅)", SUM(armd.mny_amtnt) "應收金額(未稅)", SUM(armd.mny_amt) "應收金額(未稅)原幣", SUM(armd.amt_tax) "稅額", sum(armd.amt_totnt)-sum(armd.mny_rcv * armm.val_rate) NT為收金額, SUM((armd.mny_amt + (armd.amt_tax -armd.mny_rcv))) "未收金額(原幣)", delh.ps_inv "INVOICE NO", usid.user_nm 業績人員 FROM test2.armm,test2.armd,test2.delh,test2.usid where armd.num_del=delh.num_del(+) and ( armm.num_armm = armd.num_armm ) and abs(armd.mny_amt + armd.amt_tax)  - abs(armd.mny_rcv) > 0  and armd.sts_line <'40'  and (armd.qty_req<>0) and usid.user_id=delh.emp_belon group by  armm.cod_cust,armm.cod_dola,armd.dat_del,armd.num_del,armm.val_rate,delh.ps_inv ,usid.user_nm order by   armm.cod_cust,armm.cod_dola,armd.dat_del

[nR0EXM26Rw1xueuFjFaisw==]
inikey1=mXkIMQ5rxo+yvZc6qnYvZA==
inikey2=YN8Wu8azriz1rVxXWMwrgw==
inikey3=XYT/w7aoSukNHcw/HWTmag==
inikey4=YqjzakVG9FVqVa2LLHq31A==
inikey=nR0EXM26Rw1xueuFjFaisw==
[LmRFR5nmOoCbDWRySpvbkA==]
inikey1=mXkIMQ5rxo+yvZc6qnYvZA==
inikey2=YN8Wu8azriz1rVxXWMwrgw==
inikey3=XYT/w7aoSukNHcw/HWTmag==
inikey4=YqjzakVG9FVqVa2LLHq31A==
inikey=LmRFR5nmOoCbDWRySpvbkA==
[P9D5sAGsul9F2grGADbe3w==]
inikey1=JJziXI/VeZ1J/sde00HejQ==
inikey2=tZgN4MN0zlVdC2oN2qrRsQ==
inikey3=XYT/w7aoSukNHcw/HWTmag==
inikey4=1R/cSJfMO3eo7vZWmaA6iA==
inikey=P9D5sAGsul9F2grGADbe3w==
[systemID]
inikey=2D5CD9EA12E7F310CB8A21A77432E52A
[db_name]
inikey=orcl
[before]
inikey=test2.
[after]
inikey=mf2000.
[time_out]
inikey=20


[VKveG1qXDShM7GqcnZ2+3w==]
inikey=6SoYxdiGiu5WYcHCoDj1Bg==
[Lt5fEKrKrvk9rpKZXqXOjA==]
inikey=6SoYxdiGiu5WYcHCoDj1Bg==
